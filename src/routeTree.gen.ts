/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as PingRouteImport } from './routes/ping'
import { Route as FilesRouteImport } from './routes/files'
import { Route as AuthRouteImport } from './routes/_auth'
import { Route as LoginRouteRouteImport } from './routes/login/route'
import { Route as LoginIndexRouteImport } from './routes/login/index'
import { Route as AuthIndexRouteImport } from './routes/_auth/index'
import { Route as LoginKeynameRouteImport } from './routes/login/$keyname'
import { Route as AuthTemplatesRouteImport } from './routes/_auth/templates'
import { Route as AuthSettingsRouteImport } from './routes/_auth/settings'
import { Route as AuthProjectsRouteImport } from './routes/_auth/projects'
import { Route as AuthProfileRouteImport } from './routes/_auth/profile'
import { Route as AuthCommunityRouteImport } from './routes/_auth/community'
import { Route as AuthModelsRouteRouteImport } from './routes/_auth/models/route'
import { Route as AuthDocumentsRouteRouteImport } from './routes/_auth/documents/route'
import { Route as AuthDataRouteRouteImport } from './routes/_auth/data/route'
import { Route as AuthChatRouteRouteImport } from './routes/_auth/chat/route'
import { Route as AuthModelsIndexRouteImport } from './routes/_auth/models/index'
import { Route as AuthDocumentsIndexRouteImport } from './routes/_auth/documents/index'
import { Route as AuthDataIndexRouteImport } from './routes/_auth/data/index'
import { Route as AuthChatIndexRouteImport } from './routes/_auth/chat/index'
import { Route as AuthModelsNameRouteImport } from './routes/_auth/models/$name'
import { Route as AuthDocumentsSetRouteImport } from './routes/_auth/documents/$set'
import { Route as AuthDataNewRouteImport } from './routes/_auth/data/new'
import { Route as AuthDataNameRouteImport } from './routes/_auth/data/$name'
import { Route as AuthChatVideoRouteImport } from './routes/_auth/chat/video'
import { Route as AuthChatAttestRouteImport } from './routes/_auth/chat/attest'
import { Route as AuthChatIdRouteImport } from './routes/_auth/chat/$id'

const PingRoute = PingRouteImport.update({
  id: '/ping',
  path: '/ping',
  getParentRoute: () => rootRouteImport,
} as any)
const FilesRoute = FilesRouteImport.update({
  id: '/files',
  path: '/files',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRouteRoute = LoginRouteRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginIndexRoute = LoginIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LoginRouteRoute,
} as any)
const AuthIndexRoute = AuthIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthRoute,
} as any)
const LoginKeynameRoute = LoginKeynameRouteImport.update({
  id: '/$keyname',
  path: '/$keyname',
  getParentRoute: () => LoginRouteRoute,
} as any)
const AuthTemplatesRoute = AuthTemplatesRouteImport.update({
  id: '/templates',
  path: '/templates',
  getParentRoute: () => AuthRoute,
} as any)
const AuthSettingsRoute = AuthSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AuthRoute,
} as any)
const AuthProjectsRoute = AuthProjectsRouteImport.update({
  id: '/projects',
  path: '/projects',
  getParentRoute: () => AuthRoute,
} as any)
const AuthProfileRoute = AuthProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => AuthRoute,
} as any)
const AuthCommunityRoute = AuthCommunityRouteImport.update({
  id: '/community',
  path: '/community',
  getParentRoute: () => AuthRoute,
} as any)
const AuthModelsRouteRoute = AuthModelsRouteRouteImport.update({
  id: '/models',
  path: '/models',
  getParentRoute: () => AuthRoute,
} as any)
const AuthDocumentsRouteRoute = AuthDocumentsRouteRouteImport.update({
  id: '/documents',
  path: '/documents',
  getParentRoute: () => AuthRoute,
} as any)
const AuthDataRouteRoute = AuthDataRouteRouteImport.update({
  id: '/data',
  path: '/data',
  getParentRoute: () => AuthRoute,
} as any)
const AuthChatRouteRoute = AuthChatRouteRouteImport.update({
  id: '/chat',
  path: '/chat',
  getParentRoute: () => AuthRoute,
} as any)
const AuthModelsIndexRoute = AuthModelsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthModelsRouteRoute,
} as any)
const AuthDocumentsIndexRoute = AuthDocumentsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthDocumentsRouteRoute,
} as any)
const AuthDataIndexRoute = AuthDataIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthDataRouteRoute,
} as any)
const AuthChatIndexRoute = AuthChatIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthChatRouteRoute,
} as any)
const AuthModelsNameRoute = AuthModelsNameRouteImport.update({
  id: '/$name',
  path: '/$name',
  getParentRoute: () => AuthModelsRouteRoute,
} as any)
const AuthDocumentsSetRoute = AuthDocumentsSetRouteImport.update({
  id: '/$set',
  path: '/$set',
  getParentRoute: () => AuthDocumentsRouteRoute,
} as any)
const AuthDataNewRoute = AuthDataNewRouteImport.update({
  id: '/new',
  path: '/new',
  getParentRoute: () => AuthDataRouteRoute,
} as any)
const AuthDataNameRoute = AuthDataNameRouteImport.update({
  id: '/$name',
  path: '/$name',
  getParentRoute: () => AuthDataRouteRoute,
} as any)
const AuthChatVideoRoute = AuthChatVideoRouteImport.update({
  id: '/video',
  path: '/video',
  getParentRoute: () => AuthChatRouteRoute,
} as any)
const AuthChatAttestRoute = AuthChatAttestRouteImport.update({
  id: '/attest',
  path: '/attest',
  getParentRoute: () => AuthChatRouteRoute,
} as any)
const AuthChatIdRoute = AuthChatIdRouteImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => AuthChatRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/login': typeof LoginRouteRouteWithChildren
  '/files': typeof FilesRoute
  '/ping': typeof PingRoute
  '/chat': typeof AuthChatRouteRouteWithChildren
  '/data': typeof AuthDataRouteRouteWithChildren
  '/documents': typeof AuthDocumentsRouteRouteWithChildren
  '/models': typeof AuthModelsRouteRouteWithChildren
  '/community': typeof AuthCommunityRoute
  '/profile': typeof AuthProfileRoute
  '/projects': typeof AuthProjectsRoute
  '/settings': typeof AuthSettingsRoute
  '/templates': typeof AuthTemplatesRoute
  '/login/$keyname': typeof LoginKeynameRoute
  '/': typeof AuthIndexRoute
  '/login/': typeof LoginIndexRoute
  '/chat/$id': typeof AuthChatIdRoute
  '/chat/attest': typeof AuthChatAttestRoute
  '/chat/video': typeof AuthChatVideoRoute
  '/data/$name': typeof AuthDataNameRoute
  '/data/new': typeof AuthDataNewRoute
  '/documents/$set': typeof AuthDocumentsSetRoute
  '/models/$name': typeof AuthModelsNameRoute
  '/chat/': typeof AuthChatIndexRoute
  '/data/': typeof AuthDataIndexRoute
  '/documents/': typeof AuthDocumentsIndexRoute
  '/models/': typeof AuthModelsIndexRoute
}
export interface FileRoutesByTo {
  '/files': typeof FilesRoute
  '/ping': typeof PingRoute
  '/community': typeof AuthCommunityRoute
  '/profile': typeof AuthProfileRoute
  '/projects': typeof AuthProjectsRoute
  '/settings': typeof AuthSettingsRoute
  '/templates': typeof AuthTemplatesRoute
  '/login/$keyname': typeof LoginKeynameRoute
  '/': typeof AuthIndexRoute
  '/login': typeof LoginIndexRoute
  '/chat/$id': typeof AuthChatIdRoute
  '/chat/attest': typeof AuthChatAttestRoute
  '/chat/video': typeof AuthChatVideoRoute
  '/data/$name': typeof AuthDataNameRoute
  '/data/new': typeof AuthDataNewRoute
  '/documents/$set': typeof AuthDocumentsSetRoute
  '/models/$name': typeof AuthModelsNameRoute
  '/chat': typeof AuthChatIndexRoute
  '/data': typeof AuthDataIndexRoute
  '/documents': typeof AuthDocumentsIndexRoute
  '/models': typeof AuthModelsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/login': typeof LoginRouteRouteWithChildren
  '/_auth': typeof AuthRouteWithChildren
  '/files': typeof FilesRoute
  '/ping': typeof PingRoute
  '/_auth/chat': typeof AuthChatRouteRouteWithChildren
  '/_auth/data': typeof AuthDataRouteRouteWithChildren
  '/_auth/documents': typeof AuthDocumentsRouteRouteWithChildren
  '/_auth/models': typeof AuthModelsRouteRouteWithChildren
  '/_auth/community': typeof AuthCommunityRoute
  '/_auth/profile': typeof AuthProfileRoute
  '/_auth/projects': typeof AuthProjectsRoute
  '/_auth/settings': typeof AuthSettingsRoute
  '/_auth/templates': typeof AuthTemplatesRoute
  '/login/$keyname': typeof LoginKeynameRoute
  '/_auth/': typeof AuthIndexRoute
  '/login/': typeof LoginIndexRoute
  '/_auth/chat/$id': typeof AuthChatIdRoute
  '/_auth/chat/attest': typeof AuthChatAttestRoute
  '/_auth/chat/video': typeof AuthChatVideoRoute
  '/_auth/data/$name': typeof AuthDataNameRoute
  '/_auth/data/new': typeof AuthDataNewRoute
  '/_auth/documents/$set': typeof AuthDocumentsSetRoute
  '/_auth/models/$name': typeof AuthModelsNameRoute
  '/_auth/chat/': typeof AuthChatIndexRoute
  '/_auth/data/': typeof AuthDataIndexRoute
  '/_auth/documents/': typeof AuthDocumentsIndexRoute
  '/_auth/models/': typeof AuthModelsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/login'
    | '/files'
    | '/ping'
    | '/chat'
    | '/data'
    | '/documents'
    | '/models'
    | '/community'
    | '/profile'
    | '/projects'
    | '/settings'
    | '/templates'
    | '/login/$keyname'
    | '/'
    | '/login/'
    | '/chat/$id'
    | '/chat/attest'
    | '/chat/video'
    | '/data/$name'
    | '/data/new'
    | '/documents/$set'
    | '/models/$name'
    | '/chat/'
    | '/data/'
    | '/documents/'
    | '/models/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/files'
    | '/ping'
    | '/community'
    | '/profile'
    | '/projects'
    | '/settings'
    | '/templates'
    | '/login/$keyname'
    | '/'
    | '/login'
    | '/chat/$id'
    | '/chat/attest'
    | '/chat/video'
    | '/data/$name'
    | '/data/new'
    | '/documents/$set'
    | '/models/$name'
    | '/chat'
    | '/data'
    | '/documents'
    | '/models'
  id:
    | '__root__'
    | '/login'
    | '/_auth'
    | '/files'
    | '/ping'
    | '/_auth/chat'
    | '/_auth/data'
    | '/_auth/documents'
    | '/_auth/models'
    | '/_auth/community'
    | '/_auth/profile'
    | '/_auth/projects'
    | '/_auth/settings'
    | '/_auth/templates'
    | '/login/$keyname'
    | '/_auth/'
    | '/login/'
    | '/_auth/chat/$id'
    | '/_auth/chat/attest'
    | '/_auth/chat/video'
    | '/_auth/data/$name'
    | '/_auth/data/new'
    | '/_auth/documents/$set'
    | '/_auth/models/$name'
    | '/_auth/chat/'
    | '/_auth/data/'
    | '/_auth/documents/'
    | '/_auth/models/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  LoginRouteRoute: typeof LoginRouteRouteWithChildren
  AuthRoute: typeof AuthRouteWithChildren
  FilesRoute: typeof FilesRoute
  PingRoute: typeof PingRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/ping': {
      id: '/ping'
      path: '/ping'
      fullPath: '/ping'
      preLoaderRoute: typeof PingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/files': {
      id: '/files'
      path: '/files'
      fullPath: '/files'
      preLoaderRoute: typeof FilesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login/': {
      id: '/login/'
      path: '/'
      fullPath: '/login/'
      preLoaderRoute: typeof LoginIndexRouteImport
      parentRoute: typeof LoginRouteRoute
    }
    '/_auth/': {
      id: '/_auth/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthIndexRouteImport
      parentRoute: typeof AuthRoute
    }
    '/login/$keyname': {
      id: '/login/$keyname'
      path: '/$keyname'
      fullPath: '/login/$keyname'
      preLoaderRoute: typeof LoginKeynameRouteImport
      parentRoute: typeof LoginRouteRoute
    }
    '/_auth/templates': {
      id: '/_auth/templates'
      path: '/templates'
      fullPath: '/templates'
      preLoaderRoute: typeof AuthTemplatesRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/settings': {
      id: '/_auth/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthSettingsRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/projects': {
      id: '/_auth/projects'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof AuthProjectsRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/profile': {
      id: '/_auth/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthProfileRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/community': {
      id: '/_auth/community'
      path: '/community'
      fullPath: '/community'
      preLoaderRoute: typeof AuthCommunityRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/models': {
      id: '/_auth/models'
      path: '/models'
      fullPath: '/models'
      preLoaderRoute: typeof AuthModelsRouteRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/documents': {
      id: '/_auth/documents'
      path: '/documents'
      fullPath: '/documents'
      preLoaderRoute: typeof AuthDocumentsRouteRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/data': {
      id: '/_auth/data'
      path: '/data'
      fullPath: '/data'
      preLoaderRoute: typeof AuthDataRouteRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/chat': {
      id: '/_auth/chat'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: typeof AuthChatRouteRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/models/': {
      id: '/_auth/models/'
      path: '/'
      fullPath: '/models/'
      preLoaderRoute: typeof AuthModelsIndexRouteImport
      parentRoute: typeof AuthModelsRouteRoute
    }
    '/_auth/documents/': {
      id: '/_auth/documents/'
      path: '/'
      fullPath: '/documents/'
      preLoaderRoute: typeof AuthDocumentsIndexRouteImport
      parentRoute: typeof AuthDocumentsRouteRoute
    }
    '/_auth/data/': {
      id: '/_auth/data/'
      path: '/'
      fullPath: '/data/'
      preLoaderRoute: typeof AuthDataIndexRouteImport
      parentRoute: typeof AuthDataRouteRoute
    }
    '/_auth/chat/': {
      id: '/_auth/chat/'
      path: '/'
      fullPath: '/chat/'
      preLoaderRoute: typeof AuthChatIndexRouteImport
      parentRoute: typeof AuthChatRouteRoute
    }
    '/_auth/models/$name': {
      id: '/_auth/models/$name'
      path: '/$name'
      fullPath: '/models/$name'
      preLoaderRoute: typeof AuthModelsNameRouteImport
      parentRoute: typeof AuthModelsRouteRoute
    }
    '/_auth/documents/$set': {
      id: '/_auth/documents/$set'
      path: '/$set'
      fullPath: '/documents/$set'
      preLoaderRoute: typeof AuthDocumentsSetRouteImport
      parentRoute: typeof AuthDocumentsRouteRoute
    }
    '/_auth/data/new': {
      id: '/_auth/data/new'
      path: '/new'
      fullPath: '/data/new'
      preLoaderRoute: typeof AuthDataNewRouteImport
      parentRoute: typeof AuthDataRouteRoute
    }
    '/_auth/data/$name': {
      id: '/_auth/data/$name'
      path: '/$name'
      fullPath: '/data/$name'
      preLoaderRoute: typeof AuthDataNameRouteImport
      parentRoute: typeof AuthDataRouteRoute
    }
    '/_auth/chat/video': {
      id: '/_auth/chat/video'
      path: '/video'
      fullPath: '/chat/video'
      preLoaderRoute: typeof AuthChatVideoRouteImport
      parentRoute: typeof AuthChatRouteRoute
    }
    '/_auth/chat/attest': {
      id: '/_auth/chat/attest'
      path: '/attest'
      fullPath: '/chat/attest'
      preLoaderRoute: typeof AuthChatAttestRouteImport
      parentRoute: typeof AuthChatRouteRoute
    }
    '/_auth/chat/$id': {
      id: '/_auth/chat/$id'
      path: '/$id'
      fullPath: '/chat/$id'
      preLoaderRoute: typeof AuthChatIdRouteImport
      parentRoute: typeof AuthChatRouteRoute
    }
  }
}

interface LoginRouteRouteChildren {
  LoginKeynameRoute: typeof LoginKeynameRoute
  LoginIndexRoute: typeof LoginIndexRoute
}

const LoginRouteRouteChildren: LoginRouteRouteChildren = {
  LoginKeynameRoute: LoginKeynameRoute,
  LoginIndexRoute: LoginIndexRoute,
}

const LoginRouteRouteWithChildren = LoginRouteRoute._addFileChildren(
  LoginRouteRouteChildren,
)

interface AuthChatRouteRouteChildren {
  AuthChatIdRoute: typeof AuthChatIdRoute
  AuthChatAttestRoute: typeof AuthChatAttestRoute
  AuthChatVideoRoute: typeof AuthChatVideoRoute
  AuthChatIndexRoute: typeof AuthChatIndexRoute
}

const AuthChatRouteRouteChildren: AuthChatRouteRouteChildren = {
  AuthChatIdRoute: AuthChatIdRoute,
  AuthChatAttestRoute: AuthChatAttestRoute,
  AuthChatVideoRoute: AuthChatVideoRoute,
  AuthChatIndexRoute: AuthChatIndexRoute,
}

const AuthChatRouteRouteWithChildren = AuthChatRouteRoute._addFileChildren(
  AuthChatRouteRouteChildren,
)

interface AuthDataRouteRouteChildren {
  AuthDataNameRoute: typeof AuthDataNameRoute
  AuthDataNewRoute: typeof AuthDataNewRoute
  AuthDataIndexRoute: typeof AuthDataIndexRoute
}

const AuthDataRouteRouteChildren: AuthDataRouteRouteChildren = {
  AuthDataNameRoute: AuthDataNameRoute,
  AuthDataNewRoute: AuthDataNewRoute,
  AuthDataIndexRoute: AuthDataIndexRoute,
}

const AuthDataRouteRouteWithChildren = AuthDataRouteRoute._addFileChildren(
  AuthDataRouteRouteChildren,
)

interface AuthDocumentsRouteRouteChildren {
  AuthDocumentsSetRoute: typeof AuthDocumentsSetRoute
  AuthDocumentsIndexRoute: typeof AuthDocumentsIndexRoute
}

const AuthDocumentsRouteRouteChildren: AuthDocumentsRouteRouteChildren = {
  AuthDocumentsSetRoute: AuthDocumentsSetRoute,
  AuthDocumentsIndexRoute: AuthDocumentsIndexRoute,
}

const AuthDocumentsRouteRouteWithChildren =
  AuthDocumentsRouteRoute._addFileChildren(AuthDocumentsRouteRouteChildren)

interface AuthModelsRouteRouteChildren {
  AuthModelsNameRoute: typeof AuthModelsNameRoute
  AuthModelsIndexRoute: typeof AuthModelsIndexRoute
}

const AuthModelsRouteRouteChildren: AuthModelsRouteRouteChildren = {
  AuthModelsNameRoute: AuthModelsNameRoute,
  AuthModelsIndexRoute: AuthModelsIndexRoute,
}

const AuthModelsRouteRouteWithChildren = AuthModelsRouteRoute._addFileChildren(
  AuthModelsRouteRouteChildren,
)

interface AuthRouteChildren {
  AuthChatRouteRoute: typeof AuthChatRouteRouteWithChildren
  AuthDataRouteRoute: typeof AuthDataRouteRouteWithChildren
  AuthDocumentsRouteRoute: typeof AuthDocumentsRouteRouteWithChildren
  AuthModelsRouteRoute: typeof AuthModelsRouteRouteWithChildren
  AuthCommunityRoute: typeof AuthCommunityRoute
  AuthProfileRoute: typeof AuthProfileRoute
  AuthProjectsRoute: typeof AuthProjectsRoute
  AuthSettingsRoute: typeof AuthSettingsRoute
  AuthTemplatesRoute: typeof AuthTemplatesRoute
  AuthIndexRoute: typeof AuthIndexRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthChatRouteRoute: AuthChatRouteRouteWithChildren,
  AuthDataRouteRoute: AuthDataRouteRouteWithChildren,
  AuthDocumentsRouteRoute: AuthDocumentsRouteRouteWithChildren,
  AuthModelsRouteRoute: AuthModelsRouteRouteWithChildren,
  AuthCommunityRoute: AuthCommunityRoute,
  AuthProfileRoute: AuthProfileRoute,
  AuthProjectsRoute: AuthProjectsRoute,
  AuthSettingsRoute: AuthSettingsRoute,
  AuthTemplatesRoute: AuthTemplatesRoute,
  AuthIndexRoute: AuthIndexRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  LoginRouteRoute: LoginRouteRouteWithChildren,
  AuthRoute: AuthRouteWithChildren,
  FilesRoute: FilesRoute,
  PingRoute: PingRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
